{"version":3,"sources":["../src/application.js"],"names":["declareService","configureService","createProxyService","createService","kalisio","debug","auth","app","config","get","configure","name","Strategy","getService","hooks","before","create","authenticate","strategies","remove","service","path","use","servicesPath","require","join","error","filter","filters","options","targetService","proxy","params","proxyParams","find","id","data","update","patch","createFeathersService","db","adapter","paginate","serviceOptions","Object","assign","dbService","configureModel","modelsPath","serviceMixin","mixin","perspectives","setupLogger","logsConfig","transports","Console","logsTypes","getOwnPropertyNames","forEach","logType","level","process","env","ENV","add","context","_id","fn","call","json","urlencoded","extended"],"mappings":"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","file":"application.js","sourcesContent":["import path from 'path'\r\nimport makeDebug from 'debug'\r\nimport logger from 'winston'\r\nimport 'winston-daily-rotate-file'\r\nimport compress from 'compression'\r\nimport cors from 'cors'\r\nimport helmet from 'helmet'\r\nimport bodyParser from 'body-parser'\r\nimport feathers from 'feathers'\r\nimport configuration from 'feathers-configuration'\r\nimport hooks from 'feathers-hooks'\r\nimport { merge } from 'feathers-commons'\r\nimport rest from 'feathers-rest'\r\nimport socketio from 'feathers-socketio'\r\nimport authentication from 'feathers-authentication'\r\nimport jwt from 'feathers-authentication-jwt'\r\nimport local from 'feathers-authentication-local'\r\nimport oauth2 from 'feathers-authentication-oauth2'\r\nimport GithubStrategy from 'passport-github'\r\nimport GoogleStrategy from 'passport-google-oauth20'\r\nimport { Database } from './db'\r\n\r\nconst debug = makeDebug('kalisio:kCore')\r\n\r\nfunction auth () {\r\n  const app = this\r\n  const config = app.get('authentication')\r\n\r\n  // Set up authentication with the secret\r\n  app.configure(authentication(config))\r\n  app.configure(jwt())\r\n  app.configure(local())\r\n  app.configure(oauth2({\r\n    name: 'github',\r\n    Strategy: GithubStrategy\r\n  }))\r\n  app.configure(oauth2({\r\n    name: 'google',\r\n    Strategy: GoogleStrategy\r\n  }))\r\n  // The `authentication` service is used to create a JWT.\r\n  // The before `create` hook registers strategies that can be used\r\n  // to create a new valid JWT (e.g. local or oauth2)\r\n  app.getService('authentication').hooks({\r\n    before: {\r\n      create: [\r\n        authentication.hooks.authenticate(config.strategies)\r\n      ],\r\n      remove: [\r\n        authentication.hooks.authenticate('jwt')\r\n      ]\r\n    }\r\n  })\r\n}\r\n\r\nexport function declareService (name, app, service) {\r\n  const path = app.get('apiPath') + '/' + name\r\n  // Initialize our service\r\n  app.use(path, service)\r\n\r\n  debug(name + ' service declared on path ' + path)\r\n\r\n  return app.getService(name)\r\n}\r\n\r\nexport function configureService (name, service, servicesPath) {\r\n  try {\r\n    const hooks = require(path.join(servicesPath, name, name + '.hooks'))\r\n    service.hooks(hooks)\r\n    debug(name + ' service hooks configured')\r\n  } catch (error) {\r\n    // As this is optionnal this require has to fail silently\r\n  }\r\n\r\n  if (service.filter) {\r\n    try {\r\n      const filters = require(path.join(servicesPath, name, name + '.filters'))\r\n      service.filter(filters)\r\n      debug(name + ' service filters configured')\r\n    } catch (error) {\r\n    // As this is optionnal this require has to fail silently\r\n    }\r\n  }\r\n\r\n  return service\r\n}\r\n\r\nexport function createProxyService (options) {\r\n  const targetService = options.service\r\n  function proxy (params) {\r\n    if (options.params) {\r\n      let proxyParams\r\n      if (options.params === 'function') {\r\n        proxyParams = options.params(params)\r\n      } else {\r\n        proxyParams = merge(params, options.params)\r\n      }\r\n      return proxyParams\r\n    } else return params\r\n  }\r\n  return {\r\n    find (params) { return targetService.find(proxy(params)) },\r\n    get (id, params) { return targetService.get(id, proxy(params)) },\r\n    create (data, params) { return targetService.create(data, proxy(params)) },\r\n    update (id, data, params) { return targetService.update(id, data, proxy(params)) },\r\n    patch (id, data, params) { return targetService.patch(id, data, proxy(params)) },\r\n    remove (id, params) { return targetService.remove(id, proxy(params)) }\r\n  }\r\n}\r\n\r\nexport function createService (name, app, options) {\r\n  const createFeathersService = require('feathers-' + app.db.adapter)\r\n\r\n  const paginate = app.get('paginate')\r\n  const serviceOptions = Object.assign({\r\n    name: name,\r\n    paginate\r\n  }, options || {})\r\n  // For DB services a model has to be provided\r\n  let dbService = true\r\n  try {\r\n    const configureModel = require(path.join(options.modelsPath, name + '.model.' + app.db.adapter))\r\n    configureModel(app, serviceOptions)\r\n  } catch (error) {\r\n    // As this is optionnal this require has to fail silently\r\n    dbService = false\r\n  }\r\n\r\n  // Initialize our service with any options it requires\r\n  let service\r\n  if (dbService) {\r\n    service = createFeathersService(serviceOptions)\r\n  } else if (options.proxy) {\r\n    service = createProxyService(options.proxy)\r\n  } else {\r\n    // Otherwise we expect the service to be provided as a Feathers service interface\r\n    service = require(path.join(options.servicesPath, name, name + '.service'))\r\n    // If we get a function try to call it assuming it will return the service object\r\n    if (typeof service === 'function') {\r\n      service = service(name, app, options)\r\n    }\r\n  }\r\n\r\n  // Get our initialized service so that we can register hooks and filters\r\n  service = declareService(options.path || name, app, service)\r\n  // Register hooks and filters\r\n  service = configureService(name, service, options.servicesPath)\r\n  // Optionnally a specific service mixin can be provided, apply it\r\n  if (dbService) {\r\n    try {\r\n      const serviceMixin = require(path.join(options.servicesPath, name, name + '.service'))\r\n      service.mixin(serviceMixin)\r\n    } catch (error) {\r\n      // As this is optionnal this require has to fail silently\r\n    }\r\n  }\r\n  // Then configuration\r\n  service.name = name\r\n  service.app = app\r\n  if (options) {\r\n    service.perspectives = options.perspectives\r\n  }\r\n\r\n  debug(service.name + ' service registration completed')\r\n\r\n  return service\r\n}\r\n\r\nfunction setupLogger (logsConfig) {\r\n  // Remove winston defaults\r\n  try {\r\n    logger.remove(logger.transports.Console)\r\n  } catch (error) {\r\n\r\n  }\r\n  // We have one entry per log type\r\n  let logsTypes = logsConfig ? Object.getOwnPropertyNames(logsConfig) : []\r\n  // Create corresponding winston transports with options\r\n  logsTypes.forEach(logType => {\r\n    let options = logsConfig[logType]\r\n    // Setup default log level if not defined\r\n    if (!options.level) {\r\n      options.level = (process.env.ENV === 'development' ? 'debug' : 'info')\r\n    }\r\n    try {\r\n      logger.add(logger.transports[logType], options)\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n}\r\n\r\nexport function kalisio () {\r\n  let app = feathers()\r\n  // Load app configuration first\r\n  app.configure(configuration())\r\n  // Then setup logger\r\n  setupLogger(app.get('logs'))\r\n\r\n  // This avoid managing the API path before each service name\r\n  app.getService = function (path, context) {\r\n    // Context is given as string ID\r\n    if (typeof context === 'string') {\r\n      return app.service(app.get('apiPath') + '/' + context + '/' + path)\r\n    } else if (typeof context === 'object') {\r\n      return app.service(app.get('apiPath') + '/' + context._id + '/' + path)\r\n    } else {\r\n      return app.service(app.get('apiPath') + '/' + path)\r\n    }\r\n  }\r\n  // This is used to add hooks/filters to services\r\n  app.configureService = function (name, service, servicesPath) {\r\n    return configureService(name, service, servicesPath)\r\n  }\r\n  // This is used to create standard services\r\n  app.createService = function (name, options) {\r\n    return createService(name, app, options)\r\n  }\r\n  // Override Feathers configure that do not manage async operations,\r\n  // here we also simply call the function given as parameter but await for it\r\n  app.configure = async function (fn) {\r\n    await fn.call(this)\r\n    return this\r\n  }\r\n\r\n  // Enable CORS, security, compression, and body parsing\r\n  app.use(cors())\r\n  app.use(helmet())\r\n  app.use(compress())\r\n  app.use(bodyParser.json())\r\n  app.use(bodyParser.urlencoded({ extended: true }))\r\n\r\n  // Set up plugins and providers\r\n  app.configure(hooks())\r\n  app.configure(rest())\r\n  app.configure(socketio({\r\n    path: app.get('apiPath') + 'ws'\r\n  }))\r\n\r\n  app.configure(auth)\r\n\r\n  // Initialize DB\r\n  app.db = Database.create(app)\r\n\r\n  return app\r\n}\r\n"]}