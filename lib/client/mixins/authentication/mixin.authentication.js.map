{"version":3,"sources":["../../../../src/client/mixins/authentication/mixin.authentication.js"],"names":["authenticationMixin","methods","restoreUser","accessToken","$api","passport","verifyJWT","then","users","get","payload","userId","$store","set","user","register","confirmPassword","create","login","email","password","restoreSession","authenticate","response","strategy","logout"],"mappings":";;;;;AAAA,IAAIA,sBAAsB;AACxBC,WAAS;AACPC,eADO,uBACMC,WADN,EACmB;AAAA;;AACxB,aAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,SAAnB,CAA6BH,WAA7B,EACNI,IADM,CACD,mBAAW;AACf,eAAO,MAAKH,IAAL,CAAUI,KAAV,CAAgBC,GAAhB,CAAoBC,QAAQC,MAA5B,CAAP;AACD,OAHM,EAINJ,IAJM,CAID,gBAAQ;AACZ,cAAKK,MAAL,CAAYC,GAAZ,CAAgB,MAAhB,EAAwBC,IAAxB;AACD,OANM,CAAP;AAOD,KATM;AAUPC,YAVO,oBAUGD,IAVH,EAUS;AAAA;;AACd,aAAOA,KAAKE,eAAZ;AACA;AACA,aAAO,KAAKZ,IAAL,CAAUI,KAAV,CAAgBS,MAAhB,CAAuBH,IAAvB,EACNP,IADM,CACD,aAAK;AACT,eAAO,OAAKW,KAAL,CAAWJ,KAAKK,KAAhB,EAAuBL,KAAKM,QAA5B,CAAP;AACD,OAHM,CAAP;AAID,KAjBM;AAkBPC,kBAlBO,4BAkBW;AAAA;;AAChB,aAAO,KAAKjB,IAAL,CAAUkB,YAAV,GACNf,IADM,CACD,oBAAY;AAChB,eAAO,OAAKL,WAAL,CAAiBqB,SAASpB,WAA1B,CAAP;AACD,OAHM,CAAP;AAID,KAvBM;AAwBPe,SAxBO,iBAwBAC,KAxBA,EAwBOC,QAxBP,EAwBiB;AAAA;;AACtB,aAAO,KAAKhB,IAAL,CAAUkB,YAAV,CAAuB;AAC5BE,kBAAU,OADkB;AAE5BL,eAAOA,KAFqB;AAG5BC,kBAAUA;AAHkB,OAAvB,EAKNb,IALM,CAKD,oBAAY;AAChB,eAAO,OAAKL,WAAL,CAAiBqB,SAASpB,WAA1B,CAAP;AACD,OAPM,CAAP;AAQD,KAjCM;AAkCPsB,UAlCO,oBAkCG;AAAA;;AACR,aAAO,KAAKrB,IAAL,CAAUqB,MAAV,GACNlB,IADM,CACD,aAAK;AACT,eAAKK,MAAL,CAAYC,GAAZ,CAAgB,MAAhB,EAAwB,IAAxB;AACD,OAHM,CAAP;AAID;AAvCM;AADe,CAA1B;;kBA4Ceb,mB","file":"mixin.authentication.js","sourcesContent":["let authenticationMixin = {\n  methods: {\n    restoreUser (accessToken) {\n      return this.$api.passport.verifyJWT(accessToken)\n      .then(payload => {\n        return this.$api.users.get(payload.userId)\n      })\n      .then(user => {\n        this.$store.set('user', user)\n      })\n    },\n    register (user) {\n      delete user.confirmPassword\n      // TODO: delete user.policiesAccepted\n      return this.$api.users.create(user)\n      .then(_ => {\n        return this.login(user.email, user.password)\n      })\n    },\n    restoreSession () {\n      return this.$api.authenticate()\n      .then(response => {\n        return this.restoreUser(response.accessToken)\n      })\n    },\n    login (email, password) {\n      return this.$api.authenticate({\n        strategy: 'local',\n        email: email,\n        password: password\n      })\n      .then(response => {\n        return this.restoreUser(response.accessToken)\n      })\n    },\n    logout () {\n      return this.$api.logout()\n      .then(_ => {\n        this.$store.set('user', null)\n      })\n    }\n  }\n}\n\nexport default authenticationMixin\n"]}