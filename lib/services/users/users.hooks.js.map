{"version":3,"sources":["../../../src/services/users/users.hooks.js"],"names":["authenticate","require","hooks","hashPassword","commonHooks","module","exports","before","all","find","get","create","email","name","update","patch","remove","after","when","hook","params","provider","discard","error"],"mappings":";;AAAA;;IACQA,Y,GAAiBC,QAAQ,yBAAR,EAAmCC,K,CAApDF,Y;;IACAG,Y,GAAiBF,QAAQ,+BAAR,EAAyCC,K,CAA1DC,Y;;AACR,IAAMC,cAAcH,QAAQ,uBAAR,CAApB;;AAEAI,OAAOC,OAAP,GAAiB;AACfC,UAAQ;AACNC,SAAK,EADC;AAENC,UAAM,CAAET,aAAa,KAAb,CAAF,CAFA;AAGNU,SAAK,CAAEV,aAAa,KAAb,CAAF,CAHC;AAINW,YAAQ,CACN,+BAAmB,QAAnB,EAA6B,EAAEC,OAAO,yBAAT,EAAoCC,MAAM,qBAA1C,EAA7B,CADM,EAEN,+BAAmB,QAAnB,EAA6B,EAAED,OAAO,yBAAT,EAAoCC,MAAM,qBAA1C,EAA7B,CAFM,EAGNV,cAHM,CAJF;AASNW,YAAQ,CAAEd,aAAa,KAAb,CAAF,CATF;AAUNe,WAAO,CAAEf,aAAa,KAAb,CAAF,CAVD;AAWNgB,YAAQ,CAAEhB,aAAa,KAAb,CAAF;AAXF,GADO;;AAefiB,SAAO;AACLT,SAAK,CAACJ,YAAYc,IAAZ,CAAiB;AAAA,aAAQC,KAAKC,MAAL,CAAYC,QAApB;AAAA,KAAjB,EAA+CjB,YAAYkB,OAAZ,CAAoB,UAApB,CAA/C,CAAD,6BADA;AAELb,UAAM,EAFD;AAGLC,SAAK,EAHA;AAILC,YAAQ,EAJH;AAKLG,YAAQ,EALH;AAMLC,WAAO,EANF;AAOLC,YAAQ;AAPH,GAfQ;;AAyBfO,SAAO;AACLf,SAAK,EADA;AAELC,UAAM,EAFD;AAGLC,SAAK,EAHA;AAILC,YAAQ,EAJH;AAKLG,YAAQ,EALH;AAMLC,WAAO,EANF;AAOLC,YAAQ;AAPH;AAzBQ,CAAjB","file":"users.hooks.js","sourcesContent":["import { processUserProfile, processPerspectives } from '../../hooks'\r\nconst { authenticate } = require('feathers-authentication').hooks\r\nconst { hashPassword } = require('feathers-authentication-local').hooks\r\nconst commonHooks = require('feathers-hooks-common')\r\n\r\nmodule.exports = {\r\n  before: {\r\n    all: [],\r\n    find: [ authenticate('jwt') ],\r\n    get: [ authenticate('jwt') ],\r\n    create: [\r\n      processUserProfile('github', { email: 'profile.emails[0].value', name: 'profile.displayName' }),\r\n      processUserProfile('google', { email: 'profile.emails[0].value', name: 'profile.displayName' }),\r\n      hashPassword()\r\n    ],\r\n    update: [ authenticate('jwt') ],\r\n    patch: [ authenticate('jwt') ],\r\n    remove: [ authenticate('jwt') ]\r\n  },\r\n\r\n  after: {\r\n    all: [commonHooks.when(hook => hook.params.provider, commonHooks.discard('password')), processPerspectives],\r\n    find: [],\r\n    get: [],\r\n    create: [],\r\n    update: [],\r\n    patch: [],\r\n    remove: []\r\n  },\r\n\r\n  error: {\r\n    all: [],\r\n    find: [],\r\n    get: [],\r\n    create: [],\r\n    update: [],\r\n    patch: [],\r\n    remove: []\r\n  }\r\n}\r\n"]}