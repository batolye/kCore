{"version":3,"sources":["../../../../src/client/mixins/authentication/mixin.authentication.js"],"names":["authenticationMixin","dependencies","methods","restoreUser","accessToken","api","passport","verifyJWT","then","users","get","payload","userId","store","set","user","register","confirmPassword","create","login","email","password","restoreSession","authenticate","response","strategy","logout"],"mappings":";;;;;AAAA,IAAIA,sBAAsB;AACxBC,gBAAc,CAAC,KAAD,EAAQ,OAAR,CADU;AAExBC,WAAS;AACPC,eADO,uBACMC,WADN,EACmB;AAAA;;AACxB,aAAO,KAAKC,GAAL,GAAWC,QAAX,CAAoBC,SAApB,CAA8BH,WAA9B,EACNI,IADM,CACD,mBAAW;AACf,eAAO,MAAKH,GAAL,GAAWI,KAAX,CAAiBC,GAAjB,CAAqBC,QAAQC,MAA7B,CAAP;AACD,OAHM,EAINJ,IAJM,CAID,gBAAQ;AACZ,cAAKK,KAAL,GAAaC,GAAb,CAAiB,MAAjB,EAAyBC,IAAzB;AACD,OANM,CAAP;AAOD,KATM;AAUPC,YAVO,oBAUGD,IAVH,EAUS;AAAA;;AACd,aAAOA,KAAKE,eAAZ;AACA;AACA,aAAO,KAAKZ,GAAL,GAAWI,KAAX,CAAiBS,MAAjB,CAAwBH,IAAxB,EACNP,IADM,CACD,aAAK;AACT,eAAO,OAAKW,KAAL,CAAWJ,KAAKK,KAAhB,EAAuBL,KAAKM,QAA5B,CAAP;AACD,OAHM,CAAP;AAID,KAjBM;AAkBPC,kBAlBO,4BAkBW;AAAA;;AAChB,aAAO,KAAKjB,GAAL,GAAWkB,YAAX,GACNf,IADM,CACD,oBAAY;AAChB,eAAO,OAAKL,WAAL,CAAiBqB,SAASpB,WAA1B,CAAP;AACD,OAHM,CAAP;AAID,KAvBM;AAwBPe,SAxBO,iBAwBAC,KAxBA,EAwBOC,QAxBP,EAwBiB;AAAA;;AACtB,aAAO,KAAKhB,GAAL,GAAWkB,YAAX,CAAwB;AAC7BE,kBAAU,OADmB;AAE7BL,eAAOA,KAFsB;AAG7BC,kBAAUA;AAHmB,OAAxB,EAKNb,IALM,CAKD,oBAAY;AAChB,eAAO,OAAKL,WAAL,CAAiBqB,SAASpB,WAA1B,CAAP;AACD,OAPM,CAAP;AAQD,KAjCM;AAkCPsB,UAlCO,oBAkCG;AAAA;;AACR,aAAO,KAAKrB,GAAL,GAAWqB,MAAX,GACNlB,IADM,CACD,aAAK;AACT,eAAKK,KAAL,GAAaC,GAAb,CAAiB,MAAjB,EAAyB,IAAzB;AACD,OAHM,CAAP;AAID;AAvCM;AAFe,CAA1B;;kBA6Ced,mB","file":"mixin.authentication.js","sourcesContent":["let authenticationMixin = {\n  dependencies: ['api', 'store'],\n  methods: {\n    restoreUser (accessToken) {\n      return this.api().passport.verifyJWT(accessToken)\n      .then(payload => {\n        return this.api().users.get(payload.userId)\n      })\n      .then(user => {\n        this.store().set('user', user)\n      })\n    },\n    register (user) {\n      delete user.confirmPassword\n      // TODO: delete user.policiesAccepted\n      return this.api().users.create(user)\n      .then(_ => {\n        return this.login(user.email, user.password)\n      })\n    },\n    restoreSession () {\n      return this.api().authenticate()\n      .then(response => {\n        return this.restoreUser(response.accessToken)\n      })\n    },\n    login (email, password) {\n      return this.api().authenticate({\n        strategy: 'local',\n        email: email,\n        password: password\n      })\n      .then(response => {\n        return this.restoreUser(response.accessToken)\n      })\n    },\n    logout () {\n      return this.api().logout()\n      .then(_ => {\n        this.store().set('user', null)\n      })\n    }\n  }\n}\n\nexport default authenticationMixin\n"]}