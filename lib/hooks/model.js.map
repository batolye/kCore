{"version":3,"sources":["../../src/hooks/model.js"],"names":["processPerspectives","hook","params","query","service","perspectives","forEach","isNil","$select","includes","perspective"],"mappings":";;;;;QAMgBA,mB,GAAAA,mB;;AANhB;;;;AACA;;;;AACA;;AAEA;;AAEO,SAASA,mBAAT,CAA8BC,IAA9B,EAAoC;AACzC,MAAIC,SAASD,KAAKC,MAAlB;AACA,MAAIC,QAAQD,OAAOC,KAAnB;AACA,MAAIC,UAAUH,KAAKG,OAAnB;;AAEA;AACA,MAAI,CAACA,QAAQC,YAAb,EAA2B;;AAE3B;AACAD,UAAQC,YAAR,CAAqBC,OAArB,CAA6B,uBAAe;AAC1C;AACA,QAAI,iBAAEC,KAAF,CAAQJ,KAAR,KAAkB,iBAAEI,KAAF,CAAQJ,MAAMK,OAAd,CAAlB,IAA4C,CAACL,MAAMK,OAAN,CAAcC,QAAd,CAAuBC,WAAvB,CAAjD,EAAsF;AACpF,wCAAQA,WAAR,EAAqBT,IAArB;AACD;AACF,GALD;AAMD","file":"model.js","sourcesContent":["import _ from 'lodash'\r\nimport { discard } from 'feathers-hooks-common'\r\n// import makeDebug from 'debug'\r\n\r\n// const debug = makeDebug('kaelia:kCore')\r\n\r\nexport function processPerspectives (hook) {\r\n  let params = hook.params\r\n  let query = params.query\r\n  let service = hook.service\r\n\r\n  // Test if some perspectives are defined on the model\r\n  if (!service.perspectives) return\r\n\r\n  // Iterate through known perspectives of the model\r\n  service.perspectives.forEach(perspective => {\r\n    // Only discard if not explicitely asked by $select\r\n    if (_.isNil(query) || _.isNil(query.$select) || !query.$select.includes(perspective)) {\r\n      discard(perspective)(hook)\r\n    }\r\n  })\r\n}\r\n"]}